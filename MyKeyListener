package instruments;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.ArrayList;

public class MyKeyListener implements KeyListener {
	
	private ArrayList<Character> keyInstruments = new ArrayList<Character>();
	
	public MyKeyListener() {
	}
	
	public void keyPressed(KeyEvent e) {
		int key = e.getKeyCode();
		System.out.println(key);
//			bass
			if (key == (KeyEvent.VK_B)){
				keyInstruments.add('b');
			}
//			hi-hat
			else if (key == (KeyEvent.VK_H)){
				keyInstruments.add('h');
			}
//			crash cymbal
			else if (key == (KeyEvent.VK_C)){
				keyInstruments.add('c');
			}
//			floor tom
			else if (key == (KeyEvent.VK_F)){
				keyInstruments.add('f');
			}
//			high tom
			else if (key == (KeyEvent.VK_T)){
				keyInstruments.add('t');
			}
//			low tom
			else if (key == (KeyEvent.VK_L)){
				keyInstruments.add('l');
			}
//			ride cymbal
			else if (key == (KeyEvent.VK_R)){
				keyInstruments.add('r');
			}
		}
	
	
	public void keyReleased(KeyEvent e) {
		for(int c = 0; c < keyInstruments.size(); c++) {
			if(keyInstruments.get(c) == e.getKeyChar()) {
				keyInstruments.remove(c);
				return;
			}
		}
	}
	public int getSize(){
		return keyInstruments.size();
	}
	
	public void keyTyped(KeyEvent e) {
	}
	
	public ArrayList<Character> getKey() {
		return keyInstruments;
	}
}
